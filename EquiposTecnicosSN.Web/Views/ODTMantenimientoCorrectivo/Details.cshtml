@using EquiposTecnicosSN.Web.CustomExtensions
@using EquiposTecnicosSN.Entities.Mantenimiento
@model OrdenDeTrabajoMantenimientoCorrectivo
@{
    ViewBag.Title = "Detalle de Orden de Trabajo Nº " + Model.OrdenDeTrabajoId + " para Mantenimiento Correctivo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_ODTMCUsersDetails", Model)
<div class="row">
    <div class="col-md-12">
        @Html.DisplayFor(model => model)
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <a href="@Url.Action("IndexMantenimientos", "ODTMantenimientoCorrectivo")" class="btn btn-default"> Volver</a>
            @if (OrdenDeTrabajoEstado.Abierta.Equals(Model.Estado) || OrdenDeTrabajoEstado.EsperaRepuesto.Equals(Model.Estado))
            {
                <a href="@Url.Action("EditGastos", new { id = Model.OrdenDeTrabajoId})" class="btn btn-info">Editar Gastos</a>

                if (Model.Diagnostico == null)
                {
                    <a href="@Url.Action("FillDiagnose", new { id = Model.OrdenDeTrabajoId })" class="btn btn-primary"> Diagnosticar Problema</a>
                }
                else
                {
                    <a href="@Url.Action("Reparar", new { id = Model.OrdenDeTrabajoId })" class="btn btn-primary"> Guardar reparacion</a>
                }

            }

        </div>
    </div>
</div>


@Html.Partial("_DetailSolicitudRepuestoServicioModal")

@section Scripts {

    <script type="text/javascript" charset="utf-8">
        var text = "@Model.OrdenDeTrabajoId";
        document.getElementById('qrCode').innerHTML = create_qrcode(text);

        function convertImgToBase64URL(img) {
            var imgToExport = img;//document.getElementById('imgToExport');
            var canvas = document.createElement('canvas');
            canvas.width = imgToExport.width;
            canvas.height = imgToExport.height;
            canvas.getContext('2d').drawImage(imgToExport, 0, 0);
            return canvas.toDataURL('image/png')
        }


        $(function () {
            //Se visualiza en el detalle de la orden de trabajo(readonly-Estoy en duda si es en solo ese lugar) Jose Gutierrez 23/05/2017
            $("#@Html.IdFor(model => model.EquipoParado)").bootstrapSwitch('disabled', true);

            $("#@Html.IdFor(model => model.EquipoRemplazo)").bootstrapSwitch('disabled', true);

            //Se visualiza en el detalle de la orden de trabajo(readonly-Estoy en duda si es en solo ese lugar) Jose Gutierrez 24/05/2017
            $("#@Html.IdFor(model => model.ReparoTercero)").bootstrapSwitch('disabled', true);

            $("#@Html.IdFor(model => model.VerificacionFuncionamiento)").bootstrapSwitch({
                onColor: "success",
                onText: "Si",
                offColor: "danger",
                offText: "No",
                disabled: "disabled"
            });

            $("#@Html.IdFor(model => model.Limpieza)").bootstrapSwitch({
                onColor: "success",
                onText: "Si",
                offColor: "primary",
                offText: "No",
                disabled: "disabled"
            });
        });
        function verImpresion() {
            var proveedorTercero = '@ViewBag.proveedorTercero';
            var estadoODT = '@Model.Estado';
            if (estadoODT == 'Reparada' || estadoODT == 'Cerrada') {
                var doc = {
                    content: [
                        {
                            style: 'tableExample',
                            table: {
                                headerRows: 2,
                                body: [
                                    [{ image: convertImgToBase64URL(document.getElementById('imgToExport')), width: 140, height: 30, rowSpan: 2 }, { text: 'Orden de Trabajo MC\n @Model.OrdenDeTrabajoId', colSpan: 3, rowSpan: 2, alignment: 'center', style: 'tableHeader' }, {}, {}],
                                    [{}, {}, {}, {}],
                                    [{ text: 'Fecha inicio: @Html.Raw(Model.FechaInicio)', colSpan: 2 }, {}, { text: 'Marca: @Html.Raw(Model.Equipo.InformacionHardware.Marca.Nombre)', colSpan: 2 }, {}],
                                    [{ text: 'Hospital: @Html.Raw(Model.Equipo.Ubicacion.Nombre)', colSpan: 2 }, {}, { text: 'Modelo: @Html.Raw(Model.Equipo.InformacionHardware.Modelo.Nombre)', colSpan: 2 }, {}],
                                    [{ text: 'Servicio: @Html.Raw(Model.Equipo.Sector.Nombre)', colSpan: 2 }, {}, { text: 'N/S: @Html.Raw(Model.Equipo.InformacionHardware.NumeroSerie)', colSpan: 2 }, {}],
                                    [{ text: 'Tipo: @Html.Raw(Model.Equipo.Tipo().DisplayName())', colSpan: 2 }, {}, { text: 'Matricula: @Html.Raw(Model.Equipo.NumeroMatricula)', colSpan: 2 }, {}],
                                    [{ text: 'UMDNS: @Html.Raw(Model.Equipo.UMDNS)', colSpan: 2 }, {}, { text: 'Fecha Fabr: @Html.Raw(Model.Equipo.InformacionHardware.AnioFabricacion)', colSpan: 2 }, {}],
                                    [{ text: 'Funcional: @Html.Raw((Model.VerificacionFuncionamiento ? "Sí" : "No"))', colSpan: 2 }, {}, { text: 'Reparó: @Html.Raw(Model.UsuarioReparacion)', colSpan: 2 }, {}],
                                    [{ text: 'Posee un reemplazo: @Html.Raw((Model.EquipoRemplazo ? "Sí" : "No"))', colSpan: 2 }, {}, { text: 'Telefono: no guardado', colSpan: 2 }, {}],
                                    [{ colSpan: 4, border: [true, true, true, true], text: 'Problema: @Html.Raw(Model.Descripcion)' }, '', '', ''],
                                    [{ colSpan: 2, text: 'Diagnóstico: @Html.Raw(Model.Diagnostico)' }, {}, { colSpan: 2, image: convertImgToBase64URL(document.getElementById('qrCode').children[0]), width: 60, height: 60, alignment: 'center' }, ''],
                                    [{ colSpan: 2, text: 'Reparó Tercero: @Html.Raw((Model.ReparoTercero ? "Sí" : "No")). Proveedor: ' + proveedorTercero }, {}, { colSpan: 2, text: 'Fecha Inicio Tercero: @Model.FechaInicioTercero' }, {}],
                                    [{ colSpan: 2, border: [true, true, true, true], text: 'Detalle Reparación: @Html.Raw(Model.DetalleReparacion)' }, {}, { text: 'Fecha Reparación: @Html.Raw(Model.FechaReparacion)', colSpan: 2 }, {}],
                                ]
                            }
                        }
                    ],
                    styles: {
                        header: {
                            fontSize: 13,
                            bold: true,
                            margin: [0, 0, 0, 10]
                        },
                        subheader: {
                            fontSize: 11,
                            bold: true,
                            margin: [0, 10, 0, 5]
                        },
                        tableExample: {
                            margin: [0, 5, 0, 15]
                        },
                        tableHeader: {
                            bold: true,
                            fontSize: 10,
                            color: 'black'
                        }
                    },
                    defaultStyle: {
                        fontSize: 10
                        // alignment: 'justify'
                    }
                };
            }
            else {
                var doc = {
                    pageOrientation: 'landscape',
                    content: [
                        {
                            alignment: 'center',
                            columns: [
                                {
                                    image: convertImgToBase64URL(document.getElementById('qrCode').children[0]), width: 230, height: 230, alignment: 'center', margin: [5,5]
                                },
                                {
                                    text: 'Nro ODT: @Model.OrdenDeTrabajoId\nFecha inicio: @Html.Raw(Model.FechaInicio)\nEquipo\nMarca: @Html.Raw(Model.Equipo.InformacionHardware.Marca.Nombre)\nModelo: @Html.Raw(Model.Equipo.InformacionHardware.Modelo.Nombre)', margin: [10, 10], fontSize: 30
                                }
                            ],
                            //style: 'tableExample',
                            //table: {
                            //    body: [
                            //        [{ colSpan: 2, , alignment: 'right' }, {}, { colSpan: 2, image: convertImgToBase64URL(document.getElementById('qrCode').children[0]), width: 200, height: 200, alignment: 'center', margin: [0,0] }, ''],
                            //    ]
                            //},
                            //layout: 'noBorders'
                        }
                    ],
                    styles: {
                        defaultStyle: {
                            fontSize: 35

                            // alignment: 'justify'
                        }
                    }
                };

            }
            pdfMake.createPdf(doc).print();
        }
    </script>
}